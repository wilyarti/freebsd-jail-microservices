worker_processes  1;

events {
	worker_connections  1024;
}

http {
	include       mime.types;
	default_type  application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$upstream_response_time"';
	access_log  /usr/jails/jvm/var/log/http-access.log  main;

	sendfile        on;
	keepalive_timeout  65;
	gzip  on;

	upstream myapp {
		server 10.200.1.1:8080;
	}
	upstream noti {
		server 10.200.1.1:3000;
	}
	server {
		listen 80;
		server_name localhost;
		location / {
			proxy_pass http://myapp;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
		return 301 https://$host$request_uri;

	}
	server {
		listen       443 ssl http2;
		server_name  localhost;

		ssl on;
		ssl_certificate    /usr/local/etc/letsencrypt/live/opens3.net/fullchain.pem; 
		ssl_certificate_key /usr/local/etc/letsencrypt/live/opens3.net/privkey.pem; 
		location / {
			proxy_pass http://myapp;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
		location /ws {
			proxy_pass http://10.200.1.1:7890;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
		}
	}
	server {
		listen       5000 ssl http2;
		server_name  localhost;

		ssl on;
		ssl_certificate    /usr/local/etc/letsencrypt/live/opens3.net/fullchain.pem; 
		ssl_certificate_key /usr/local/etc/letsencrypt/live/opens3.net/privkey.pem; 

		location / {
			proxy_pass http://noti;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
	}
}
